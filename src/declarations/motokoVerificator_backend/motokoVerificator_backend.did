type Verifier = 
 service {
   addMyProfile: (StudentProfile) -> (Result);
   deleteMyProfile: () -> (Result);
   getDaysSubmits: () -> (SubmitsResult) query;
   imRegistered: () -> (bool) query;
   seeAProfile: (principal) -> (Result_1) query;
   seeMyProfile: () -> (Result_1) query;
   updateMyProfile: (StudentProfile) -> (Result);
   verifyWork: (text, nat) -> (Result);
 };
type SubmitsResult = 
 record {
   day1: nat;
   day2: nat;
   day3: nat;
   day4: nat;
 };
type StudentProfile = 
 record {
   cli: text;
   graduate: bool;
   name: text;
   progress: nat;
   team: text;
 };
type Result_1 = 
 variant {
   err: text;
   ok: StudentProfile;
 };
type Result = 
 variant {
   err: text;
   ok;
 };
service : () -> Verifier
